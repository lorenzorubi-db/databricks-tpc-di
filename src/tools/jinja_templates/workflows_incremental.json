{
  "name": "{{ job_name }}",
  "description": "The ***run_customermgmt*** paramater accepts either ***YES*** or ***NO***.  If this XML file has already been ingested, the *dw_init* task does **NOT** remove it (since it is kind of a pain). Therefore, if you want to disable this task and just keep the existing historical customermgmt staging table then change to ***NO***.  It is set to ***YES*** by default.",
  "email_notifications": {
    "no_alert_for_skipped_runs": false
  },
  "webhook_notifications": {},
  "timeout_seconds": 0,
  "max_concurrent_runs": 1,
  "parameters": [
    {
      "name": "catalog",
      "default": "{{ catalog }}"
    },
    {
      "name": "run_customermgmt",
      "default": "YES"
    },
    {
      "name": "scale_factor",
      "default": "{{ scale_factor }}"
    },
    {
      "name": "tpcdi_directory",
      "default": "{{ tpcdi_directory }}"
    },
    {
      "name": "wh_db",
      "default": "{{ wh_target }}_{{ exec_type }}"
    },
    {
      "name": "predictive_optimization",
      "default": "{{ pred_opt }}"
    }
  ],
  {% if scale_factor > 100 and serverless == "YES" %}
  "job_clusters": [
    {
      "job_cluster_key": "{{ job_name }}_compute",
      "new_cluster": {
        "cluster_name": "",
        "spark_version": "{{ dbr }}",
        "spark_conf": {
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode",
          "spark.sql.shuffle.partitions": "auto",
          "spark.databricks.adaptive.localShuffleReader.enabled": "true"
        },
        "driver_node_type_id": "{{ driver_node_type }}",
        "node_type_id": "{{ worker_node_type }}",
        "custom_tags": {
          "ResourceClass": "SingleNode"
        },
        "spark_env_vars": {
          "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
        },
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "STANDARD",
        "num_workers": 0
      }
    }
  ],
  {% elif serverless != "YES" %}
  "job_clusters": [
    {
      "job_cluster_key": "{{ job_name }}_compute",
      "new_cluster": {
        "spark_version": "{{ dbr }}",
        "spark_conf": {
          {% if worker_node_count == 0 %}
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode",
          "spark.databricks.adaptive.localShuffleReader.enabled": "true",
          {% endif %}
          "spark.sql.shuffle.partitions": "auto"
        },
        {% if cloud_provider == "Azure" %} 
        "azure_attributes": {
          "availability": "SPOT_WITH_FALLBACK_AZURE",
          "first_on_demand": 1,
          "spot_bid_price_percent": -1
        },
        {% endif %}
        {% if cloud_provider == "AWS" %}
        "aws_attributes": {
          "availability": "SPOT_WITH_FALLBACK",
          "first_on_demand": 1,
          "zone_id": "auto",
          "spot_bid_price_percent": 100
        },
        {% endif %}
        "spark_env_vars": {
          "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
        },
        {% if worker_node_count == 0 %}
        "custom_tags": {
          "ResourceClass": "SingleNode"
        },
        {% endif %}
        "driver_node_type_id": "{{ driver_node_type }}",
        "node_type_id": "{{ worker_node_type }}",
        "num_workers": {{ worker_node_count }},
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "PHOTON"
      }
    }
  ],
  {% endif %}
  "tasks": [
    {
      "task_key": "dw_init",
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/dw_init",
        "base_parameters": {
          {% raw %}"pred_opt": "{{job.parameters.predictive_optimization}}"{% endraw %}
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch0_validation",
      "depends_on": [
        {
          "task_key": "dw_init"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_validation",
        "base_parameters": {
          "batch_id": "0"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch0_complete",
      "depends_on": [
        {
          "task_key": "batch0_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_complete",
        "base_parameters": {
          "batch_id": "0"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "run_customermgmt_YES_NO",
      "depends_on": [
        {
          "task_key": "batch0_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "condition_task": {
        "op": "EQUAL_TO",
        {% raw %}"left": "{{job.parameters.run_customermgmt}}"{% endraw %},
        "right": "YES"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_customermgmt",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "true"
        }
      ],
      "run_if": "ALL_SUCCESS",
      {% if scale_factor > 100 %}
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/CustomerMgmtRaw_mavenlib",
        "base_parameters": {
          "xml_lib": "com.databricks.spark.xml"
        },
        "source": "WORKSPACE"
      },
      "libraries": [
        {
          "maven": {
            "coordinates": "com.databricks:spark-xml_2.12:0.18.0"
          }
        }
      ],
      "job_cluster_key": "{{ job_name }}_compute",
      {% else %}
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/CustomerMgmtRaw",
        "base_parameters": {
          "xml_lib": "xml"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_DimDate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/raw_ingestion",
        "base_parameters": {
          "raw_schema": "sk_dateid BIGINT, datevalue DATE, datedesc STRING, calendaryearid INT, calendaryeardesc STRING, calendarqtrid INT, calendarqtrdesc STRING, calendarmonthid INT, calendarmonthdesc STRING, calendarweekid INT, calendarweekdesc STRING, dayofweeknum INT, dayofweekdesc STRING, fiscalyearid INT, fiscalyeardesc STRING, fiscalqtrid INT, fiscalqtrdesc STRING, holidayflag BOOLEAN",
          "filename": "Date.txt",
          "tbl": "DimDate"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_FinWire",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/ingest_finwire",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_DimTime",
      "depends_on": [
        {
          "task_key": "ingest_FinWire"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/raw_ingestion",
        "base_parameters": {
          "raw_schema": "sk_timeid BIGINT, timevalue STRING, hourid INT, hourdesc STRING, minuteid INT, minutedesc STRING, secondid INT, seconddesc STRING, markethoursflag BOOLEAN, officehoursflag BOOLEAN",
          "filename": "Time.txt",
          "tbl": "DimTime"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_StatusType",
      "depends_on": [
        {
          "task_key": "ingest_FinWire"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/raw_ingestion",
        "base_parameters": {
          "raw_schema": "st_id STRING, st_name STRING",
          "filename": "StatusType.txt",
          "tbl": "StatusType"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_TaxRate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/raw_ingestion",
        "base_parameters": {
          "raw_schema": "tx_id STRING, tx_name STRING, tx_rate FLOAT",
          "filename": "TaxRate.txt",
          "tbl": "TaxRate"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_TradeType",
      "depends_on": [
        {
          "task_key": "ingest_FinWire"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/raw_ingestion",
        "base_parameters": {
          "raw_schema": "tt_id STRING, tt_name STRING, tt_is_sell INT, tt_is_mrkt INT",
          "filename": "TradeType.txt",
          "tbl": "TradeType"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_industry",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/raw_ingestion",
        "base_parameters": {
          "raw_schema": "in_id STRING, in_name STRING, in_sc_id STRING",
          "filename": "Industry.txt",
          "tbl": "Industry"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_ProspectIncremental",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/ingest_prospectincremental",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_DailyMarketIncremental",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/ingest_dailymarketincremental",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_BatchDate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/Ingest_Incremental",
        "base_parameters": {
          "filename": "BatchDate.txt",
          "raw_schema": "batchdate DATE",
          "tbl": "BatchDate"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimBroker",
      "depends_on": [
        {
          "task_key": "ingest_DimDate"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimBroker",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Historical_DimCustomer",
      "depends_on": [
        {
          "task_key": "ingest_ProspectIncremental"
        },
        {
          "task_key": "ingest_TaxRate"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimCustomer Historical",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Historical_DimAccount",
      "depends_on": [
        {
          "task_key": "Silver_DimBroker"
        },
        {
          "task_key": "Historical_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimAccount Historical",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Historical_FactCashBalances",
      "depends_on": [
        {
          "task_key": "Historical_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/gold/FactCashBalances Historical",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch1_Prospect",
      "depends_on": [
        {
          "task_key": "Historical_DimCustomer"
        },
        {
          "task_key": "ingest_BatchDate"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/Prospect",
        "base_parameters": {
          "batch_id": "1"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimCompany",
      "depends_on": [
        {
          "task_key": "ingest_FinWire"
        },
        {
          "task_key": "ingest_industry"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimCompany",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimSecurity",
      "depends_on": [
        {
          "task_key": "Silver_DimCompany"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimSecurity",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Historical_FactWatches",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Historical_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/FactWatches Historical",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Historical_DimTrade",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Historical_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimTrade Historical",
        "base_parameters": {
          "wh_timezone": ""
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_Financial",
      "depends_on": [
        {
          "task_key": "Silver_DimCompany"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/Financial",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Historical_FactMarketHistory",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Silver_Financial"
        },
        {
          "task_key": "ingest_DailyMarketIncremental"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/gold/FactMarketHistory Historical",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch1_validation",
      "depends_on": [
        {
          "task_key": "Historical_FactCashBalances"
        },
        {
          "task_key": "Historical_DimTrade"
        },
        {
          "task_key": "Historical_FactWatches"
        },
        {
          "task_key": "Historical_FactMarketHistory"
        },
        {
          "task_key": "ingest_DimTime"
        },
        {
          "task_key": "ingest_StatusType"
        },
        {
          "task_key": "ingest_TradeType"
        },
        {
          "task_key": "Batch1_Prospect"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_validation",
        "base_parameters": {
          "batch_id": "1"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch1_complete",
      "depends_on": [
        {
          "task_key": "batch1_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_complete",
        "base_parameters": {
          "batch_id": "1"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch2_DimCustomer",
      "depends_on": [
        {
          "task_key": "batch1_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimCustomer Incremental",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch2_Prospect",
      "depends_on": [
        {
          "task_key": "Batch2_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/Prospect",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch2_DimAccount",
      "depends_on": [
        {
          "task_key": "Batch2_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimAccount Incremental",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch2_DimTrade",
      "depends_on": [
        {
          "task_key": "Batch2_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimTrade Incremental",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch2_FactWatches",
      "depends_on": [
        {
          "task_key": "Batch2_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/FactWatches Incremental",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch2_FactCashBalances",
      "depends_on": [
        {
          "task_key": "Batch2_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/gold/FactCashBalances Incremental",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch2_FactMarketHistory",
      "depends_on": [
        {
          "task_key": "batch1_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/gold/FactMarketHistory Incremental",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch2_validation",
      "depends_on": [
        {
          "task_key": "Batch2_FactMarketHistory"
        },
        {
          "task_key": "Batch2_FactCashBalances"
        },
        {
          "task_key": "Batch2_FactWatches"
        },
        {
          "task_key": "Batch2_DimTrade"
        },
        {
          "task_key": "Batch2_Prospect"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_validation",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch2_complete",
      "depends_on": [
        {
          "task_key": "batch2_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_complete",
        "base_parameters": {
          "batch_id": "2"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch3_DimCustomer",
      "depends_on": [
        {
          "task_key": "batch2_complete"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimCustomer Incremental",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch3_Prospect",
      "depends_on": [
        {
          "task_key": "Batch3_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/Prospect",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch3_DimAccount",
      "depends_on": [
        {
          "task_key": "Batch3_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimAccount Incremental",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch3_DimTrade",
      "depends_on": [
        {
          "task_key": "Batch3_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/DimTrade Incremental",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch3_FactWatches",
      "depends_on": [
        {
          "task_key": "Batch3_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/silver/FactWatches Incremental",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch3_FactCashBalances",
      "depends_on": [
        {
          "task_key": "Batch3_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/gold/FactCashBalances Incremental",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Batch3_FactMarketHistory",
      "depends_on": [
        {
          "task_key": "batch2_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/gold/FactMarketHistory Incremental",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch3_complete",
      "depends_on": [
        {
          "task_key": "Batch3_FactMarketHistory"
        },
        {
          "task_key": "Batch3_FactCashBalances"
        },
        {
          "task_key": "Batch3_FactWatches"
        },
        {
          "task_key": "Batch3_DimTrade"
        },
        {
          "task_key": "Batch3_Prospect"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_complete",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "batch3_validation",
      "depends_on": [
        {
          "task_key": "batch3_complete"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/batch_validation",
        "base_parameters": {
          "batch_id": "3"
        },
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "audit_alerts",
      "depends_on": [
        {
          "task_key": "Batch3_FactMarketHistory"
        },
        {
          "task_key": "Batch3_DimTrade"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/audit_alerts",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "automated_audit",
      "depends_on": [
        {
          "task_key": "audit_alerts"
        },
        {
          "task_key": "batch3_validation"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/audit_validation/automated_audit",
        {% if exec_type == "DBSQL" %}
        "warehouse_id": "{{ wh_id }}",
        {% endif %}
        "source": "WORKSPACE"
      },
      {% if serverless != "YES" %}
      "job_cluster_key": "{{ job_name }}_compute",
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    }
  ]
}